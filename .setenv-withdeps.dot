#!/bin/ksh

if [[ -d $(pwd)/vgrid ]] ; then
   export vgrid=${vgrid:-$(pwd)/vgrid}
fi
if [[ -d $(pwd)/rpncomm ]] ; then
   export rpncomm=${rpncomm:-$(pwd)/rpncomm}
fi

export modelutils=${modelutils:-$(pwd)/modelutils}
export rpnphy=${rpnphy:-$(pwd)/rpnphy}
export gemdyn=${gemdyn:-$(pwd)/gemdyn}
export gem=${gem:-$(pwd)/gem}

if [[ ! -d $modelutils ]] ; then
   cat<<EOF
ERROR: cannot find modelutils
       you may either link modelutils dir
          ln -s /PATH/TO/MODELUTILS modelutils
       or define the env var
          export modelutils=/PATH/TO/MODELUTILS
       then re-source this file
EOF
   exit 1
fi

if [[ ! -d $rpnphy ]] ; then
   cat<<EOF
ERROR: cannot find rpnphy
       you may either link rpnphy dir
          ln -s /PATH/TO/RPNPHY rpnphy
       or define the 
          export rpnphy=/PATH/TO/RPNPHY
       then re-source this file
EOF
   exit 1
fi


if [[ ! -d $gemdyn ]] ; then
   cat<<EOF
ERROR: cannot find gemdyn
       you may either link gemdyn dir
          ln -s /PATH/TO/GEMDYN gemdyn
       or define the 
          export gemdyn=/PATH/TO/GEMDYN
       then re-source this file
EOF
   exit 1
fi


if [[ ! -d $gem ]] ; then
   cat<<EOF
ERROR: cannot find gem
       you may either link gem dir
          ln -s /PATH/TO/GEM gem
       or define the 
          export gem=/PATH/TO/GEM
       then re-source this file
EOF
   exit 1
fi

__here=$(pwd)
cd $modelutils ; . ./.setenv.dot ; cd ${__here}
. s.ssmuse.dot GEM/d/gem-data/gem-data_4.2.0
unset __here

for item in modelscripts modelutils rpnphy gemdyn gem gem-ref gem-mod; do
   if [[ -d $item/bin ]] ; then
      export PATH=$(pwd)/$item/bin:$PATH
   fi
   if [[ -d $item/lib/python ]] ; then
      export PYTHONPATH=$(pwd)/$item/lib/python:$PYTHONPATH
   fi
done

if [[ -f modelscripts/bin/.env_var.dot ]] ; then
   . modelscripts/bin/.env_var.dot
fi

if [[ -d rde ]] ; then
   export rde_version=dev
   export rde=$(pwd)/rde
   #TODO: update to new rde packaging
   . $rde/bin/.rde.env_setup.dot rde ${rde_version} all $rde $rde
fi

export PATH=$(pwd)/$(rdevar build/bin):$PATH
